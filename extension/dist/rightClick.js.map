{"version":3,"file":"rightClick.js","mappings":"AAcA","sources":["webpack://CheckMade/./src/background/rightClick.ts"],"sourcesContent":["// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// A generic onclick callback function.\nchrome.contextMenus.onClicked.addListener(genericOnClick);\nconsole.log('running right click function');\n// A generic onclick callback function.\nfunction genericOnClick(info) {\n    switch (info.menuItemId) {\n        case 'radio':\n            // Radio item function\n            console.log('Radio item clicked. Status:', info.checked);\n            break;\n        case 'checkbox':\n            // Checkbox item function\n            console.log('Checkbox item clicked. Status:', info.checked);\n            break;\n        default:\n            // Standard context menu item function\n            console.log('Standard context menu item clicked.');\n    }\n}\nchrome.runtime.onInstalled.addListener(function () {\n    // Create one test item for each context type.\n    let contexts = [\n        'page',\n        'selection',\n        'link',\n        'editable',\n        'image',\n        'video',\n        'audio',\n    ];\n    for (let i = 0; i < contexts.length; i++) {\n        let context = contexts[i];\n        let title = \"Test '\" + context + \"' menu item\";\n        chrome.contextMenus.create({\n            title: title,\n            //@ts-ignore\n            contexts: [context],\n            id: context,\n        });\n    }\n    // Create a parent item and two children.\n    let parent = chrome.contextMenus.create({\n        title: 'Test parent item',\n        id: 'parent',\n    });\n    chrome.contextMenus.create({\n        title: 'Child 1',\n        parentId: parent,\n        id: 'child1',\n    });\n    chrome.contextMenus.create({\n        title: 'Child 2',\n        parentId: parent,\n        id: 'child2',\n    });\n    // Create a radio item.\n    chrome.contextMenus.create({\n        title: 'radio',\n        type: 'radio',\n        id: 'radio',\n    });\n    // Create a checkbox item.\n    chrome.contextMenus.create({\n        title: 'checkbox',\n        type: 'checkbox',\n        id: 'checkbox',\n    });\n    // Intentionally create an invalid item, to show off error checking in the\n    // create callback.\n    chrome.contextMenus.create({ title: 'Oops', parentId: 999, id: 'errorItem' }, function () {\n        if (chrome.runtime.lastError) {\n            console.log('Got expected error: ' + chrome.runtime.lastError.message);\n        }\n    });\n});\n"],"names":[],"sourceRoot":""}